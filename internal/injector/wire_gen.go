// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"github.com/jmoiron/sqlx"
	"github.com/shigaichi/top-sites-ranking-api/internal/domain/repository"
	"github.com/shigaichi/top-sites-ranking-api/internal/infra"
	"github.com/shigaichi/top-sites-ranking-api/internal/usecase"
	"github.com/shigaichi/top-sites-ranking-api/internal/util"
)

// Injectors from wire.go:

func NewRankHistoryInteractor(db util.Crudable) *usecase.RankHistoryInteractor {
	trancoDailyRankRepositoryImpl := infra.NewTrancoDailyRankRepositoryImpl(db)
	rankHistoryInteractor := usecase.NewRankHistoryInteractor(trancoDailyRankRepositoryImpl)
	return rankHistoryInteractor
}

func NewStandardWriteInteractor(transaction repository.Transaction, db *sqlx.DB, batchSize int) *usecase.StandardWriteInteractor {
	trancoAPIImpl := infra.NewTrancoAPIImpl()
	trancoListRepositoryImpl := infra.NewTrancoListRepositoryImpl(db)
	trancoCsvImpl := infra.NewTrancoCsvImpl()
	trancoDomainRepositoryImpl := infra.NewTrancoDomainRepositoryImpl(db)
	trancoRankingsRepositoryImpl := infra.NewTrancoRankingsRepositoryImpl(batchSize, db)
	standardWriteInteractor := usecase.NewStandardWriteInteractor(trancoAPIImpl, trancoListRepositoryImpl, trancoCsvImpl, transaction, trancoDomainRepositoryImpl, trancoRankingsRepositoryImpl)
	return standardWriteInteractor
}
